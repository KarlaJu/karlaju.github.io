<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust on Ucasky</title>
    <link>/categories/rust/</link>
    <description>Recent content in Rust on Ucasky</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Tue, 15 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/rust/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introducción a Rust</title>
      <link>/post/introduccionarust/</link>
      <pubDate>Tue, 15 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/introduccionarust/</guid>
      <description>Acercamiento a Rust Introducción Rust es un lenguaje de programación que trabaja con detalles de bajo nivel, representación de datos y concurrencia. Rust esta diseñado para desarrollar código confiable que sea eficiente en términos de velocidad y uso de memoria. Por ejemplo, al introducir el paralelismo en Rust resultará una operación de relativamente bajo riesgo: el compilador detectará los errores clásicos por nosotros. El control de bajo nivel y la ergonomía de alto nivel a menudo están peleados entre sí en el diseño de lenguaje de programación pero Rust desafía este problema.
Rust no se limita a la programación de sistemas de bajo nivel. Es lo suficiente ergonómico para hacer que las aplicaciones de CLI(command-line interface), y otros tipos de código sean bastante agradables de escribir.
Rust también cuenta con herramientas de desarrollo de programación de sistemas:
 Cargo: el administrador de dependencias incluido y la herramienta de compilación, facilita agregar, compilar y gestionar dependencias siendo coherente en todo el ecosistema de Rust. Rustfmt que garantiza un estilo de codificación consistente entre los desarrolladores. Rust Language Server potencia la integración IDE para completar el código y mensajes de error en línea.  Ventaja para los desarrolladores   Rust es una herramienta productiva que te permite colaborar entre grandes equipos de desarrolladores con diferentes niveles de conocimiento de programación de sistemas.</description>
    </item>
    
    <item>
      <title>Rust</title>
      <link>/post/rust/</link>
      <pubDate>Sat, 05 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/rust/</guid>
      <description>Desde hace unos días he empezado a estudiar el lenguaje de programación Rust. Rust es un lenguaje de programación de sistemas, su desarrollador es Mozilla. Ha sido diseñado para ser concurrente y practico. Está inspirado en el lenguaje de programación C. Al ver la sintaxis de Rust, me costó un poco de trabajo entender un poco los conceptos de variables mutables e inmutables.
 Porque las variables predeterminadas son inmutables, lo que significa que una vez que un valor está vinculado a una variable, no puede cambiar ese valor. Si no se le puede cambiar el valor a una variable se vuelve en una constante y por eso debemos hacer uso de la mutabilidad.</description>
    </item>
    
  </channel>
</rss>